services:
  proxy-nginx:
    container_name: proxy-nginx
    build: ./srcs/services-lite/proxy_nginx
    volumes:
      - backend-django-certs:/etc/nginx/ssl/
    networks:
      - default
    ports:
      - 8888:8888
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://proxy-nginx:80/nginx_status | grep -q 'Active connections'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      frontend-nginx:
        condition: service_healthy
    restart: on-failure
  frontend-nginx:
    container_name: frontend-nginx
    build: ./srcs/services-lite/frontend_nginx
    volumes:
      - frontend:/var/www/ft_transcendence/
    networks:
      - default
    expose:
      - 443
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://frontend-nginx:80/nginx_status | grep -q 'Active connections'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      backend-django:
        condition: service_healthy
    restart: on-failure
  backend-django:
    container_name: backend-django
    build: ./srcs/services-lite/backend_django
    volumes:
      - backend-django:/var/app/ft_transcendence/
      - backend-django-certs:/etc/nginx/ssl/
      - backend-django-logs:/var/log/django/
    networks:
      - default
    expose:
      - 8000
    env_file:
      - ./env/42api.env
      - ./env/postgresql.env
    healthcheck:
      test: ["CMD-SHELL", "curl -sk -IL https://backend-django:8000/api/django_status | grep -q 'HTTP/2 200'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      backend-postgresql:
        condition: service_healthy
    restart: on-failure
  backend-postgresql:
    container_name: backend-postgresql
    build: ./srcs/services-lite/backend_postgresql
    volumes:
      - backend-postgresql:/var/lib/postgresql/data/pgdata/
      - backend-postgresql-logs:/var/log/postgresql/
    networks:
      - default
    expose:
      - 5432
    env_file:
      - ./env/postgresql.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: on-failure

volumes:
  frontend:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/frontend/data
      o: bind
  backend-django:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/backend/data/
      o: bind
  backend-django-certs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/backend/certs/
      o: bind
  backend-django-logs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/backend/logs/
      o: bind
  backend-postgresql:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/database/data/
      o: bind
  backend-postgresql-logs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/database/logs/
      o: bind

networks:
    default:
        driver: bridge