services:
  backend-django:
    container_name: backend-django
    build: ./srcs/services/backend_django
    volumes:
      - backend-elk-certs:/usr/share/elasticsearch/config/certs
    expose:
      - 9001
    restart: on-failure

  frontend-nginx:
    container_name: frontend-nginx
    build: ./srcs/services/frontend_nginx
    expose:
      - 9000:80
    volumes:
      - frontend:/var/www/ft_transcendence
      - backend-elk-certs:/usr/share/elasticsearch/config/certs
    depends_on:
      - backend-django
    restart: on-failure

  proxy-nginx:
    container_name: proxy-nginx
    env_file: .env
    build: ./srcs/services/proxy_nginx
    volumes:
      - ea-proxy-nginx:/usr/share/elastic-agent/data
      - backend-elk-certs:/usr/share/elastic-agent/config/certs
    ports:
      - 8888:80
    depends_on:
      backend-fleet:
        condition: service_started
    restart: on-failure

  setup-elastic:
    container_name: setup-elastic
    build: ./srcs/services/setup_elastic/
    volumes:
      - backend-elastic:/usr/share/elasticsearch/data
      - backend-elk-certs:/usr/share/elasticsearch/config/certs
      - backend-elk-logs:/usr/share/elasticsearch/logs
      - backend-kibana:/usr/share/kibana/data
    user: "0"
    command: /usr/share/elasticsearch/setup.sh "${ELASTIC_PASSWORD}" "${KIBANA_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/backend-elastic/backend-elastic.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  backend-elastic:
    container_name: backend-elastic
    depends_on:
      setup-elastic:
        condition: service_healthy
    build: ./srcs/services/backend_elastic
    volumes:
      - backend-elk-certs:/usr/share/elasticsearch/config/certs
      - backend-elk-logs:/usr/share/elasticsearch/logs
      - backend-elastic:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -s --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt https://backend-elastic:9200 | grep -q 'missing authentication credentials'" ]
      interval: 10s
      timeout: 10s
      retries: 120

  backend-kibana:
    container_name: backend-kibana
    depends_on:
      backend-elastic:
        condition: service_healthy
    build: ./srcs/services/backend_kibana
    volumes:
      - backend-elk-certs:/usr/share/kibana/config/certs
      - backend-elk-logs:/usr/share/kibana/logs
      - backend-kibana:/usr/share/kibana/data
    ports:
      - 5601:5601
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'" ]
      interval: 10s
      timeout: 10s
      retries: 120

  backend-fleet:
    container_name: backend-fleet
    depends_on:
      backend-kibana:
        condition: service_healthy
    build: ./srcs/services/backend_fleet
    env_file: .env
    volumes:
      - backend-elk-certs:/usr/share/fleet/config/certs
    ports:
      - 8220:8220
    expose:
      - 9243:9243

  backend-logstash:
    container_name: backend-logstash
    depends_on:
      backend-kibana:
        condition: service_healthy
    build: ./srcs/services/backend_logstash
    volumes:
      - backend-elk-certs:/usr/share/logstash/config/certs
    ports:
        - 5044:5044

volumes:
  frontend:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/frontend
      o: bind
  backend-elk-certs:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/certs
        o: bind
  backend-elk-logs:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/logs
        o: bind
  backend-elastic:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/elastic
        o: bind
  backend-kibana:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/kibana
        o: bind
  ea-proxy-nginx:
      driver: local
      driver_opts:
          type: none
          device: ./srcs/data/ea/proxy-nginx
          o: bind