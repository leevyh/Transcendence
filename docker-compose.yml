services:
  backend-elastic:
    container_name: backend-elastic
    build: ./srcs/services/backend_elastic
    #   ulimits:
    #     memlock:
    #       soft: -1
    #       hard: -1
    mem_limit: 1g
    volumes:
      - backend-elastic:/usr/share/elasticsearch/data/
      - backend-elk-logs:/usr/share/elasticsearch/logs/
      - backend-elk-certs:/usr/share/elasticsearch/config/certs/
    networks:
      - default
    expose:
      - 9200
    env_file:
      - ./env/elastic.env
    healthcheck:
      test:
        ["CMD-SHELL", "curl -s --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt https://backend-elastic:9200 | grep -q 'missing authentication credentials'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      setup-elastic:
        condition: service_healthy
    restart: on-failure

  backend-kibana:
    container_name: backend-kibana
    depends_on:
      backend-elastic:
        condition: service_healthy
    build: ./srcs/services/backend_kibana
    volumes:
      - backend-kibana:/usr/share/kibana/data/
      - backend-elk-logs:/usr/share/kibana/logs/
      - backend-elk-certs:/usr/share/kibana/config/certs/
    networks:
      - default
    ports:
      - 5601:5601
    env_file:
      - ./env/elastic.env
      - ./env/kibana.env
    healthcheck:
      test:
        ["CMD-SHELL", "curl -s --cacert /usr/share/kibana/config/certs/ca/ca.crt -IL https://backend-kibana:5601 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: on-failure

  backend-logstash:
    container_name: backend-logstash
    build: ./srcs/services/backend_logstash
    volumes:
      - backend-logstash:/usr/share/logstash/data/
      - backend-django-logs:/usr/share/logstash/logs/
      - backend-elk-certs:/usr/share/logstash/config/certs/
    networks:
      - default
    expose:
      - 5959
    env_file:
      - ./env/elastic.env
    depends_on:
      backend-kibana:
        condition: service_healthy
    restart: on-failure

  backend-fleet:
    container_name: backend-fleet
    build: ./srcs/services/backend_fleet
    volumes:
      - backend-fleet:/usr/share/elastic-agent/data/
      - backend-elk-certs:/usr/share/elastic-agent/config/certs/
    networks:
      - default
    expose:
      - 8220
    env_file:
      - ./env/fleet.env
      - ./env/elastic.env
      - ./srcs/services/backend_fleet/conf/elastic-agent.env
    healthcheck:
      test: ["CMD-SHELL", "curl -IL http://localhost:6791/liveness | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      backend-kibana:
        condition: service_healthy
    restart: on-failure

  backend-django:
    container_name: backend-django
    build: ./srcs/services/backend_django
    volumes:
      - backend-django:/var/app/ft_transcendence/
      - backend-django-logs:/var/log/django/
      - backend-elk-certs:/usr/share/elasticsearch/config/certs/
    networks:
      - default
    expose:
      - 8000
    env_file:
      - ./env/42api.env
      - ./env/postgresql.env
    healthcheck:
      test: ["CMD-SHELL", "curl -IL http://backend-django:8000/api/django_status | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      backend-postgresql:
          condition: service_healthy
    restart: on-failure

  backend-postgresql:
    container_name: backend-postgresql
    build: ./srcs/services/backend_postgresql
    volumes:
      - backend-postgresql:/var/lib/postgresql/
      - backend-elk-certs:/usr/share/elastic-agent/config/certs/
    networks:
      - default
    expose:
      - 5432
    env_file:
      - ./env/fleet.env
      - ./env/postgresql.env
#      - ./srcs/services/backend_postgresql/conf/elastic-agent.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      backend-logstash:
        condition: service_healthy
    restart: on-failure

  frontend-nginx:
    container_name: frontend-nginx
    build: ./srcs/services/frontend_nginx
    volumes:
      - frontend:/var/www/ft_transcendence/
      - ea-frontend-nginx:/usr/share/elastic-agent/
      - backend-elk-certs:/usr/share/elastic-agent/config/certs/
    networks:
      - default
    expose:
      - 443
    env_file:
      - ./env/fleet.env
      - ./srcs/services/frontend_nginx/conf/elastic-agent.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://frontend-nginx:80/nginx_status | grep -q 'Active connections'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      backend-fleet:
        condition: service_healthy
    restart: on-failure

  proxy-nginx:
    container_name: proxy-nginx
    build: ./srcs/services/proxy_nginx
    volumes:
      - ea-proxy-nginx:/usr/share/elastic-agent/
      - backend-elk-certs:/usr/share/elastic-agent/config/certs
    networks:
      - default
    ports:
      - 8888:8888
    env_file:
      - ./env/fleet.env
      - ./srcs/services/proxy_nginx/conf/elastic-agent.env
    healthcheck:
        test: ["CMD-SHELL", "curl -f http://proxy-nginx:80/nginx_status | grep -q 'Active connections'"]
        interval: 10s
        timeout: 10s
        retries: 120
    depends_on:
      backend-fleet:
        condition: service_healthy
    restart: on-failure

  setup-elastic:
    container_name: setup-elastic
    build: ./srcs/services/setup_elastic/
    user: "0"
    command: /usr/share/elasticsearch/setup.sh
    volumes:
      - backend-kibana:/usr/share/kibana/data/
      - backend-elastic:/usr/share/elasticsearch/data/
      - backend-elk-logs:/usr/share/elasticsearch/logs/
      - backend-elk-certs:/usr/share/elasticsearch/config/certs/
    networks:
      - default
    env_file:
      - ./env/elastic.env
      - ./env/kibana.env
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/backend-elastic/backend-elastic.crt ]"]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: on-failure

volumes:
  frontend:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/frontend
      o: bind
  backend-elastic:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/elastic/elastic
        o: bind
  backend-kibana:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/elastic/kibana
        o: bind
  backend-logstash:
    driver: local
    driver_opts:
        type: none
        device: ./srcs/data/elastic/logstash
        o: bind
  backend-fleet:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/elastic/fleet
      o: bind
  backend-django:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/backend/
      o: bind
  backend-django-logs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/backend_/logs
      o: bind
  backend-postgresql:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/database/data
      o: bind
  backend-postgresql-logs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/database/logs
      o: bind
  backend-elk-certs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/elastic/certs
      o: bind
  backend-elk-logs:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/elastic/logs
      o: bind
  ea-proxy-nginx:
      driver: local
      driver_opts:
          type: none
          device: ./srcs/data/elastic/ea/proxy-nginx
          o: bind
  ea-frontend-nginx:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/data/elastic/ea/frontend-nginx
      o: bind

networks:
    default:
        driver: bridge
